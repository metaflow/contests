PROBLEM STATEMENT

Mirko is a magician.
He has decided to perform a trick that he wants you to solve.
The trick consists of three steps:


Mirko takes some mutually distinct hats and arranges them into a line.
He picks up a red marker and uses it to write a positive integer onto each hat.
Then, he picks up a blue marker and uses it to write another positive integer onto each hat. For each hat, the blue number is either the prefix sum or the suffix sum of all red numbers up to, and including, that hat.


For example, suppose he picked up four hats.
Let's call them A, B, C, and D, in their order from step 1.
In step 2, he wrote the red number 10 onto hat A, 20 onto B, 30 onto C, and 40 onto D.
Here is one possibility what he could write in step 3:

For hat A, he chose the prefix sum, i.e., the sum of all red numbers from the beginning to this hat, inclusive. In this case, the sum is 10.
For hat B, he chose the suffix sum, i.e., the sum of all red numbers from this hat to the end, inclusive. In this case, the sum is 20+30+40 = 90.
For hat C, he also chose the suffix sum: 30+40 = 70.
For hat D, he chose the prefix sum: 10+20+30+40 = 100.

After step 3 he now has four hats, each with one red and one blue number.
For example, hat C now has the red number 30 and the blue number 70.



Mirko has shown you some shuffled hats, each with a red and a blue number.
Then he has asked you the following question: 
"How many different orders of these hats are consistent with the trick described above?"



You are given the red numbers on all hats in the vector <int> value, and all the blue numbers in the vector <int> sum.
For each valid i, the red number value[i] is on the same hat as the blue number sum[i].
Let X be the total number of orders that are consistent with the trick.
Return the value (X modulo 1,000,000,007).
Note that all hats are distinct, even if they have both the same red and the same blue number.


DEFINITION
Class:HatParade
Method:getPermutation
Parameters:vector <int>, vector <int>
Returns:int
Method signature:int getPermutation(vector <int> value, vector <int> sum)


CONSTRAINTS
-value will contain between 1 and 500 elements, inclusive.
-sum will contain the same number of elements as value.
-Each element of value will be between 1 and 10^9, inclusive.
-Each element of sum will be between 1 and 10^9, inclusive.


EXAMPLES

0)
{2, 1, 3}
{3, 1, 6}

Returns: 2

There are two valid orders.
In one of them, the red numbers were in order: 1, 2, 3.
For this order all blue numbers correspond to prefix sums: 1 = 1, 1+2 = 3, and 1+2+3 = 6.
The second valid order is the reverse of the first one.

1)
{1, 1, 1, 1}
{9, 1, 2, 3}

Returns: 0

Regardless of which order we choose, the blue number 9 will never be a prefix sum or a suffix sum of some red numbers.
Hence, in this case there are no orders that would be consistent with Mirko's trick.

2)
{4, 4, 4, 4}
{16, 16, 8, 8}

Returns: 4

The first and second hats belong on the ends. The third and fourth hats belong in the middle. Any such ordering that maintains these properties results in a correct sorting.

3)
{1, 2, 3, 4, 5, 6, 7}
{1, 27, 6, 22, 18, 21, 7}

Returns: 2

Placing the hats in order or in reverse order will yield the correct sums.
